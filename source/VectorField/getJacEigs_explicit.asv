% x is a 4 dim vector
function [vectors, values]= getJacEigs_explicit(x, params)

% This is how we compute the eigenvectors, although we use a simplification
% to minimize the error a bit
        % % % Define change of coordinates 
        % % S= [1 0 0 0;
        % %     0 0 1 0;
        % %     0 2 0 1;
        % %     0 1 0 1];
        % % S_inv...
        % %  = [1 0 0 0;
        % %     0 0 0 1;
        % %     0 1 0 0;
        % %     0 0 1 -2];
        % % % Get explicit eigenvalues from B_inf defined in (3.2)
        % % [vectors_new, values_new] = getBinfEigs(params);
        % % vectors_new.u = S_inv*vectors_new.u;
        % % vectors_new.s = S_inv*vectors_new.s;

   

    [rho, theta]= rTh_coord(params) ;
    r=rho;
    
    mu_s1 = - sqrt(r)*exp(1i*theta/2);
    mu_u1 =   sqrt(r)*exp(1i*theta/2);
    mu_s2 = - sqrt(r)*exp(-1i*theta/2);
    mu_u2 =   sqrt(r)*exp(-1i*theta/2);

    Vu1 = [exp(-1i*theta) / r ; 
            exp(-1i*theta/2)/sqrt(r) ;
            1 ; 
            sqrt(r) *exp(1i*theta/2) ];

     % scale the eigenvectors if necessary
    Vu1 = Vu1/mid(norm(Vu1));
    Vu1 =params.scale*Vu1;

    Vu2 = conj(Vu1);
    Vs1 = Vu1.*[1;-1;1;-1];
    Vs2 = conj(Vs1);

    vectors_new.u = [Vu1 , Vu2 ] ;
    vectors_new.s = [Vs1 , Vs2 ] ;

    values_new.u = [mu_u1, mu_u2];
    values_new.s = [mu_s1, mu_s2];

    % mat = JacSH(0,params);
    % 
    % EE = [Vu1 , Vu2 ,Vs1 , Vs2 ];
    % EE\mat*EE-    diag([mu_u1, mu_u2,mu_s1, mu_s2])

    keyboard





    a3 = rad(vectors_new.u)

    [a1 a2 a3]
    % rad(vectors_new.s)

    % [vectors, values] = getBinfEigs(params)

    % Let S = [ 
    % Returns 

    % compute the jacobian for SH
    Df0=JacSH(x(1),params);
    [V1,D1]=eigs(Df0);
    % sort the eigenvalues and eigenvectors by increasing real part
    [d, ind]=sort(diag(real(D1)));
    % if real(D1(ind(1))) < real(D1(ind(end)))
        ind = flip(ind);
    % end
    D=D1(ind,ind);
    V=V1(:,ind);
    
    % scale the eigenvectors if necessary
    Vscale=params.scale*V;
    
    % save the eigenvalues and eigenvectors
    values.u=[D(1,1),D(2,2)];
    vectors.u=Vscale(:,1:2);
    values.s=[D(3,3),D(4,4)];
    vectors.s=Vscale(:,3:4);
    
    if ((real(values.s(1))<0) == 1) == 0
        disp('There may be something wrong with the assignment of the asymptotic stable and unstable vectors')
    end
    
end
