function [ab] = quadratic_cauchy_product_2D(a,b)
% Computes the Cauchy product of two sequences with possibly different lengths

zero = a(1,1)*0;

sz_a = size(a);
sz_b = size(b);

M1 =sz_a(1);
M2 =sz_b(1);

N1 =sz_a(2);
N2 =sz_b(2); 

ab = zero *zeros(M1+M2-1,N1+N2-1);



for m=(1:(M1+M2-1))
    if (m < M1) 
        if (m < M2)
            a_index_1 = 1:m;
            b_index_1 = m:-1:1;
        else
            a_index_1 = (m-M2+1):m;
            b_index_1 = M2:-1:1;
        end
    else
        if (m < M2)
            a_index_1 = 1:M1;
            b_index_1 = m:-1:(m-M1+1);
        else
            a_index_1 = (m-M2+1):M1;
            b_index_1 = M2:-1:(m-M1+1);
        end
    end
    
    for n=(1:(N1+N2-1))
        if (n < N1) 
            if (n < N2)
                a_index_2 = 1:n;
                b_index_2 = n:-1:1;
            else
                a_index_2 = (n-N2+1):n;
                b_index_2 = N2:-1:1;
            end
        else
            if (n < M2)
                a_index_2 = 1:N1;
                b_index_2 = n:-1:(n-N1+1);
            else
                a_index_2 = (n-N2+1):N1;
                b_index_2 = N2:-1:(n-N1+1);
            end
        end
    end
end


for m=(1:(M1+M2-1))
    if (m < M1) 
        if (m < M2)
            ab(m) = sum(a(1:m).*b(m:-1:1));
        else
            ab(m) = sum(a((m-M2+1):m).*b(M2:-1:1));
        end
    else
        if (m < M2)
            ab(m) = sum(a(1:M1).*b(m:-1:(m-M1+1)));
        else
            ab(m) = sum(a((m-M2+1):M1).*b(M2:-1:(m-M1+1)));
        end
    end
end


end

