function [params,mflds,psoln] = getICs(n)


if n == 1

    params.rho = 1 - .01;
    params.scale = 3e-1;
    params.mu=0.05;
    params.nu=1.6;
    params.lambda = 0;
    params.cheb.order=450;
    params.mfld.order=40;
    params.tol=4e-16;
    params.L = 0;

    bd_scale = .05;
    
    load("psoln1.mat");
    psoln = psoln1;

    new = 1.05;

elseif n == 2

    params.rho = 1 - .01;
    params.scale = 2.5e-1;
    params.mu=0.05;
    params.nu=1.6;
    params.lambda = 0;
    params.cheb.order=450;
    params.mfld.order=35;
    params.tol=4e-16;
    params.L = 0;

    bd_scale = .08;
    
    load("psoln2.mat");
    psoln = psoln2;

    new = 1.05;

elseif n == 3

    params.rho = 1 - .01;
    params.scale = 3e-1;
    params.mu=0.2;
    params.nu=1.6;
    params.lambda = 0;
    params.cheb.order=2^10;
    params.mfld.order=25;
    params.tol=4e-15;
    bd_scale = .1;
    params.L = 0;
    
    load("psoln3.mat");
    psoln = psoln3;

    new = 1.01;

end

    mflds = get_mflds(params);

%    [mflds.unstable.error,mflds.stable.error] = runManifoldValidation(params,mflds);

%   for convenience
    if n == 1
        load('mError1');
        mflds.stable.error = mError1;
        mflds.unstable.error = mError1;
    elseif n == 2
        load('mError2');
        mflds.stable.error = mError2;
        mflds.unstable.error = mError2;
    else
        load('mError3');
        mflds.stable.error = mError3;
        mflds.unstable.error = mError3;
    end

end

